{"version":3,"sources":["services/matrix.service.js","models/point.js","components/cell/cell.jsx","components/field/field.jsx","components/controls/controls.jsx","components/game-over/game-over.jsx","components/how-top-play/how-to-play.jsx","components/game/game.jsx","App.js","index.js"],"names":["flattenMatrix","matrix","reduce","result","row","concat","matrix_service","isMovePossible","firstPoint","secondPoint","firstValue","x","y","secondValue","firstFlatIndex","length","secondFlatIndex","_ref","topPoint","bottomPoint","flatMatrix","min","Math","max","i","createStartMatrix","Point","Object","classCallCheck","this","otherPoint","Cell","props","react_default","a","createElement","className","classNames","Cell--active","isActive","Cell--disabled","isDisabled","onClick","value","Field","isActiveCell","rowIndex","colIndex","isDisabledCell","map","key","col","cell_cell","setPoint","Controls","es","bsStyle","refill","glyph","restart","GameOver","href","e","preventDefault","HowToPlay","Game","_this","possibleConstructorReturn","getPrototypeOf","call","state","buildInitialState","bind","assertThisInitialized","matrixService","gameOver","setState","prevState","newPoint","equals","objectSpread","undefined","filter","every","v","last","pop","push","filteredMatrix","newMatrix","current","index","floor","Array","fill","_this2","controls_controls","field_field","game_over_game_over","how_top_play_how_to_play","React","PureComponent","App","game_game","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f0372aef.chunk.js","sourcesContent":["export const isMovePossible = (matrix, firstPoint, secondPoint) => {\n  const firstValue = matrix[firstPoint.x][firstPoint.y];\n  const secondValue = matrix[secondPoint.x][secondPoint.y];\n  if (firstValue !== secondValue && (firstValue + secondValue !== 10)) {\n      return false;\n    }\n\n  const firstFlatIndex = firstPoint.x * matrix[0].length + firstPoint.y;\n  const secondFlatIndex = secondPoint.x * matrix[0].length + secondPoint.y;\n  const { topPoint, bottomPoint } = firstFlatIndex <= secondFlatIndex \n    ? { topPoint: firstPoint, bottomPoint: secondPoint }\n    : { topPoint: secondPoint, bottomPoint: firstPoint };\n\n  if (topPoint.x === bottomPoint.x) {\n    const x = topPoint.x;\n    for (let y = topPoint.y + 1; y < bottomPoint.y; y++) {\n      if (typeof matrix[x][y] !== 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (topPoint.y === bottomPoint.y) {\n    const y = topPoint.y;\n    for (let x = topPoint.x + 1; x < bottomPoint.x; x++) {\n      if (typeof matrix[x][y] !== 'undefined') {\n        return false\n      }\n    }\n    return true;\n  }\n  const flatMatrix = flattenMatrix(matrix);\n  const min = Math.min(firstFlatIndex, secondFlatIndex);\n  const max = Math.max(firstFlatIndex, secondFlatIndex);\n  for (let i = min + 1; i < max; i++) {\n    if (typeof flatMatrix[i] !== 'undefined') {\n      return false\n    }\n  }\n  return true;\n}\n\nexport const flattenMatrix = (matrix) => {\n  return matrix.reduce((result, row) => result.concat(row), []);\n};\n\nexport const createStartMatrix = () => {\n  return [\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [1, 1, 1, 2, 1, 3, 1, 4, 1],\n    [5, 1, 6, 1, 7, 1, 8, 1, 9],\n  ];\n};\n\nexport default {\n  isMovePossible,\n  createStartMatrix,\n  flattenMatrix\n};\n","export default class Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  equals(otherPoint) {\n    if (!otherPoint) {\n      return false;\n    }\n    if (!(otherPoint instanceof Point)) {\n      return false;\n    }\n\n    if (this === otherPoint) {\n      return true;\n    }\n\n    return this.x === otherPoint.x &&\n      this.y === otherPoint.y;\n  }\n}","import React from 'react';\nimport classNames from 'classnames';\nimport './cell.css';\n\nconst Cell = (props) => (\n  <div\n    className={classNames('Cell', { 'Cell--active': props.isActive, 'Cell--disabled': props.isDisabled })}\n    onClick={props.onClick}>\n    {props.value}\n  </div>\n);\n\nexport default Cell;\n","import React from 'react';\nimport Cell from '../cell/cell';\nimport './field.css';\n\nconst Field = (props) => {\n  const isActiveCell = (rowIndex, colIndex) => {\n    const firstPoint = props.firstPoint;\n    const secondPoint = props.secondPoint;\n    return (firstPoint && firstPoint.x === rowIndex && firstPoint.y === colIndex) ||\n      (secondPoint && secondPoint.x === rowIndex && secondPoint.y === colIndex);\n  }\n\n  const isDisabledCell = (rowIndex, colIndex) => {\n    return (typeof props.matrix[rowIndex][colIndex] === 'undefined');\n  }\n\n  return (\n    <div>\n      <div className=\"Field\">\n        {props.matrix.map((row, rowIndex) => (\n          <div className=\"Row\" key={rowIndex}>\n            {row.map((col, colIndex) => (\n              <Cell\n                key={`${rowIndex}:${colIndex}`}\n                isActive={isActiveCell(rowIndex, colIndex)}\n                isDisabled={isDisabledCell(rowIndex, colIndex)}\n                onClick={() => props.setPoint(rowIndex, colIndex)}\n                value={col}>\n              </Cell>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Field;\n","import React from 'react';\nimport {\n  Button,\n  Glyphicon\n} from 'react-bootstrap';\nimport './controls.css';\n\nconst Controls = (props) => (\n  <div className=\"Controls\">\n    <Button bsStyle=\"primary\" onClick={props.refill}>\n      Continue <Glyphicon glyph=\"equalizer\"></Glyphicon>\n    </Button>\n    <Button bsStyle=\"danger\" onClick={props.restart}>\n      Restart <Glyphicon glyph=\"refresh\"></Glyphicon>\n    </Button>\n  </div>\n);\n\nexport default Controls;\n","import React from 'react';\nimport './game-over.css';\n\nconst GameOver = (props) => {\n  const restart = (e) => {\n    e.preventDefault();\n    props.restart();\n  }\n\n  return (\n    <div className=\"GameOver\">\n      You did it! Hit <a href=\"/\" onClick={restart}>Restart</a> to play again!\n    </div>\n  );\n}\n\nexport default GameOver;","import React from 'react';\nimport './how-to-play.css';\n\nconst HowToPlay = () => (\n  <section className=\"jumbotron HowToPlay\">\n    <h2 className=\"display-4\">How to play</h2>\n    <hr className=\"my-4\" />\n    <div className=\"lead HowToPlay-rules\">\n      Click on 2 neighbour cells, where the values are the same or give 10 in sum.\n      Cells are considered neighbours when they are:\n      <ul>\n        <li>positioned next to each other horizontaly or vertically</li>\n        <li>positioned on two subsequent rows</li>\n      </ul>\n      and there are no non-empty cells inbetween.\n      Once there are no more moves, click Continue to replenish matrix with\n      the remaining values (empty cells are excluded).\n      The game ends when there are no calls left. Have fun!</div>\n  </section>\n);\n\nexport default HowToPlay;","import React from 'react';\nimport matrixService from '../../services/matrix.service';\nimport Point from '../../models/point';\nimport Field from '../field/field';\nimport Controls from '../controls/controls';\nimport GameOver from '../game-over/game-over';\nimport HowToPlay from '../how-top-play/how-to-play';\nimport './game.css';\n\nclass Game extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = this.buildInitialState();\n\n    this.setPoint = this.setPoint.bind(this);\n    this.refill = this.refill.bind(this);\n    this.restart = this.restart.bind(this);\n  }\n\n  buildInitialState() {\n    return {\n      matrix: matrixService.createStartMatrix(),\n      firstPoint: null,\n      secondPoint: null,\n      gameOver: false,\n    };\n  }\n\n  restart() {\n    this.setState(this.buildInitialState());\n  }\n\n  setPoint(rowIndex, colIndex) {\n    if (!this.state.matrix[rowIndex][colIndex]) {\n      return;\n    }\n    this.setState((prevState) => {\n      const newPoint = new Point(rowIndex, colIndex);\n      let firstPoint = prevState.firstPoint;\n      let secondPoint = prevState.secondPoint;\n      if (firstPoint && firstPoint.equals(newPoint)) {\n        return {\n          ...prevState,\n          firstPoint: null\n        };\n      }\n      if (secondPoint && secondPoint.equals(newPoint)) {\n        return {\n          ...prevState,\n          secondPoint: null\n        };\n      }\n      let matrix = prevState.matrix;\n      if (!firstPoint) {\n        firstPoint = new Point(rowIndex, colIndex)\n      } else if (!secondPoint) {\n        secondPoint = new Point(rowIndex, colIndex);\n      }\n\n      let gameOver = prevState.gameOver;\n      if (firstPoint && secondPoint &&\n        matrixService.isMovePossible(matrix, firstPoint, secondPoint)) {\n        matrix[firstPoint.x][firstPoint.y] = undefined;\n        matrix[secondPoint.x][secondPoint.y] = undefined;\n        firstPoint = null;\n        secondPoint = null;\n\n        matrix = matrix.filter(row => !row.every(v => typeof v === 'undefined'));\n        if (matrix.length === 0) {\n          gameOver = true;\n        }\n      }\n\n      return {\n        ...prevState,\n        firstPoint,\n        secondPoint,\n        gameOver,\n        matrix\n      }\n    });\n  }\n\n  refill() {\n    this.setState((prevState) => {\n      let flatMatrix = matrixService.flattenMatrix(prevState.matrix);\n      let last = flatMatrix.pop();\n      while (typeof last === 'undefined') {\n        last = flatMatrix.pop();\n      }\n      flatMatrix.push(last);\n\n      const filteredMatrix = flatMatrix.filter(v => typeof v !== 'undefined');\n\n      const newMatrix = flatMatrix\n        .concat(filteredMatrix)\n        .reduce((result, current, index) => {\n          const row = Math.floor(index / 9);\n          if (index % 9 === 0) {\n            result.push(new Array(9).fill(undefined));\n          }\n          result[row][index % 9] = (current);\n          return result;\n        }, []);\n\n      return { ...prevState, matrix: newMatrix };\n    });\n  }\n\n  render() {\n    return (\n      <main className=\"Game\">\n        <section className=\"Game-matrix\">\n          <Controls restart={this.restart} refill={this.refill}></Controls>\n          <Field\n            matrix={this.state.matrix}\n            firstPoint={this.state.firstPoint}\n            secondPoint={this.state.secondPoint}\n            setPoint={(rowIndex, colIndex) => this.setPoint(rowIndex, colIndex)}\n          ></Field>\n          {this.state.gameOver &&\n            <GameOver restart={() => this.restart()}></GameOver>\n          }\n        </section>\n        <HowToPlay></HowToPlay>\n      </main>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './components/game/game'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Game></Game>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}